---
import TableOfContentsHeading, {
	type Heading,
} from "./TableOfContentsHeading.astro";

export type BasicHeading = Omit<Heading, "subheadings">;

interface Props {
	headings: BasicHeading[];
}

const { headings } = Astro.props;
const toc = buildToc(headings);

function buildToc(headings: BasicHeading[]) {
	const toc: Heading[] = [];

	const parentHeadings = new Map();
	let globalParentDepth: number = 1;
	headings.forEach((h, i) => {
		const heading = { ...h, subheadings: [] };
		parentHeadings.set(heading.depth, heading);

		if (i === 0) {
			globalParentDepth = heading.depth;
		}

		if (heading.depth === globalParentDepth) {
			toc.push(heading);
		} else if (
			parentHeadings.get(heading.depth - 1) != undefined &&
			heading.depth < 5
		) {
			parentHeadings.get(heading.depth - 1).subheadings.push(heading);
		}
	});
	return toc;
}
---

<nav aria-label="On this page">
	<ol>
		{toc.map((heading) => <TableOfContentsHeading heading={heading} />)}
	</ol>
</nav>
